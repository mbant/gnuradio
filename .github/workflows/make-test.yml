name: 'Make Test'
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
      - gha/ccache
jobs:
  check-formatting:
    name: Check C++ Formatting
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - uses: gnuradio/clang-format-lint-action@v0.5-4
      with:
        source: '.'
        exclude: './volk'
        extensions: 'h,hpp,cpp,cc,cc.in'
  doxygen:
    name: Doxygen
    runs-on: ubuntu-20.04 # This can run on whatever
    container:
      image: 'gnuradio/ci-ubuntu-20.04-3.9:0.3'
      volumes:
        - build_data:/build
    steps:
    - uses: actions/checkout@v2
      name: Checkout Project
    - name: CMake
      run: 'cd /build && cmake ${GITHUB_WORKSPACE}'
    - name: Make Docs
      run: 'cd /build && make doxygen_target'
  # All of these shall depend on the formatting check (needs: check-formatting)
  ubuntu-20_04:
    name: Ubuntu 20.04
    needs: check-formatting
    runs-on: ubuntu-20.04
    env:
        CCACHE_DIR: /ccache
        CXXFLAGS: -Werror
    container:
      image: 'gnuradio/ci-ubuntu-20.04-3.9:0.3'
      volumes:
        - build_data:/build
        - ccache:/ccache
      options: --cpus 2
    steps:
    - name: Restore ccache
      uses: pat-s/always-upload-cache@v2.1.3
      with:
        path: ccache
        key: ccache-ubuntu20-gcc-${{ github.sha }}
        restore-keys: ccache-ubuntu20-gcc
    - uses: actions/checkout@v2
      name: Checkout Project
    - name: Check ccache stats (a-priori)
      run: ccache --show-stats
    - name: CMake
      run: |
        export PATH=/usr/lib/ccache:$PATH
        cd /build
        cmake ${GITHUB_WORKSPACE} -DENABLE_DOXYGEN=OFF
    - name: Make
      run: 'cd /build && make -j2 -k'
    - name: Make Test
      run: 'cd /build && ctest --output-on-failure -E "qa_agc|qa_cpp_py_binding|qa_cpp_py_binding_set|qa_ctrlport_probes|qa_qtgui"'
    - name: Check ccache stats (a-posteriori)
      run: ccache --show-stats
